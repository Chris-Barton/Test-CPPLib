---
name: CMake
env:
  VCPKG_BINARY_SOURCES: "clear;nuget,GitHub,readwrite"
on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build:
    name: ${{ matrix.platform.job-name }}

    strategy:
      fail-fast: false
      matrix:
        platform:
          [
            {
              job-name: Windows Build - Debug,
              runs-on: windows-latest,
              vcpkg-dir: "C:\\vcpkg",
              cmake-preset: win-debug,
            },
            {
              job-name: Linux Build - Debug,
              runs-on: ubuntu-latest,
              vcpkg-dir: "/usr/local/share/vcpkg",
              cmake-preset: linux-debug,
            },
            {
              job-name: Windows Build - Release,
              runs-on: windows-latest,
              vcpkg-dir: "C:\\vcpkg",
              cmake-preset: win-release,
            },
            {
              job-name: Linux Build - Release,
              runs-on: ubuntu-latest,
              vcpkg-dir: "/usr/local/share/vcpkg",
              cmake-preset: linux-release,
            },
          ]

    runs-on: ${{ matrix.platform.runs-on }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - uses: ilammy/msvc-dev-cmd@v1
        if: runner.os == 'Windows'

      - name: Get CMake and Ninja
        uses: lukka/get-cmake@v3.23.0

      - name: Configure
        run: cmake --preset ${{ matrix.platform.cmake-preset }} -DCMAKE_TOOLCHAIN_FILE=${{ matrix.platform.vcpkg-dir }}/scripts/buildsystems/vcpkg.cmake ${{ github.workspace }}

      - name: Build
        run: cmake --build --preset ${{ matrix.platform.cmake-preset }} ${{github.workspace}}

      - name: Test
        working-directory: ${{github.workspace}}
        run: ctest --preset ${{ matrix.platform.cmake-preset }}

      - name: Install
        working-directory: ${{github.workspace}}
        run: cmake --build --preset ${{ matrix.platform.cmake-preset }} --target install

      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.platform.cmake-preset  }}
          path: ${{ github.workspace }}/out/install/${{ matrix.platform.cmake-preset }}

  package-win:
    name: Package Windows

    runs-on: ubuntu-latest
    needs: build

    permissions:
      packages: write
      actions: write

    steps:
      - uses: actions/setup-dotnet@v2
        with:
          source-url: https://nuget.pkg.github.com/chris-barton/index.json
        env:
          NUGET_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}

      - name: Get Windows Debug
        uses: actions/download-artifact@v3
        with:
          name: win-debug
          path: ${{ github.workspace }}/out/install/win-debug

      - name: Get Windows Release
        uses: actions/download-artifact@v3
        with:
          name: win-release
          path: ${{ github.workspace }}/out/install/win-release

      - name: Windows
        uses: DamianReeves/write-file-action
        with:
          path: ${{ github.workspace }}/windows.nuspec
          contents: |
            <?xml version="1.0" encoding="utf-8"?>
            <package xmlns="http://schemas.microsoft.com/packaging/2011/08/nuspec.xsd">
                <metadata>
                    <id>Test-CPPLib</id>
                    <version>1.0.0</version>
                    <summary>Test-CPPLib built using CMake</summary>
                    <authors>HBK</authors>
                    <requireLicenseAcceptance>false</requireLicenseAcceptance>
                    <description>NONE</description>
                    <repository type="git" url="https://github.com/Chris-Barton/Test-CPPLib.git"/>
                </metadata>
                <files>
                    <file src="out\install\win-release\**" target="\" />
                    <file src="out\install\win-debug\**" target="debug\" />
                </files>
            </package>
          write-mode: overwrite 

      - name: Nuget Pack 
        working-directory: ${{github.workspace}}
        run: mono nuget pack windows.nuspec
